<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="echo-upper-server">
	<property environment="env" />
	<property name="ECLIPSE_HOME" value="C:/Program Files/eclipse/" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	<path id="echo-upper-server.classpath">
		<pathelement location="bin" />
	</path>
	<target name="init">
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin" />
	</target>
	<target depends="clean" name="cleanall" />
	<target depends="build-subprojects,build-project" name="build" />
	<target name="build-subprojects" />
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
			<src path="src" />
			<classpath refid="echo-upper-server.classpath" />
		</javac>
	</target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar" />
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</unzip>
	</target>
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
		<antcall target="build" />
	</target>
	<target name="free-ports">
		<echo>Allowing inbound TCP connections on port ${port}...</echo>
		<exec executable="sudo">
			<arg value="iptables"/>
			<arg value="-A"/>
			<arg value="INPUT"/>
			<arg value="-p"/>
			<arg value="tcp"/>
			<arg value="--dport"/>
			<arg value="${port}"/>
			<arg value="-m"/>
			<arg value="conntrack"/>
			<arg value="--ctstate"/>
			<arg value="NEW,ESTABLISHED"/>
			<arg value="-j"/>
			<arg value="ACCEPT"/>
		</exec>
		<echo>...done.</echo>
		<echo>Allowing outbound TCP connections on port ${port}...</echo>
		<exec executable="sudo">
			<arg value="iptables"/>
			<arg value="-A"/>
			<arg value="OUTPUT"/>
			<arg value="-p"/>
			<arg value="tcp"/>
			<arg value="--sport"/>
			<arg value="${port}"/>
			<arg value="-m"/>
			<arg value="conntrack"/>
			<arg value="--ctstate"/>
			<arg value="ESTABLISHED"/>
			<arg value="-j"/>
			<arg value="ACCEPT"/>
		</exec>
		<echo>...done.</echo>
	</target>
	<target name="EchoUpperServer" depends="free-ports">
		<java classname="it.polito.pds.followifier.EchoUpperServer" failonerror="true" fork="yes">
			<arg value="${port}"/>
			<classpath refid="echo-upper-server.classpath" />
		</java>
	</target>
	<target depends="EchoUpperServer" name="run"/>
</project>
